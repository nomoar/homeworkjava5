import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class HomeWork5 {
    public static void main(String[] args) throws InterruptedException, CharacterCreationException {
        //попробуйте методы и тд.
        //класс Tester возможно не дописан, но судя по задания - дописан
        //не знаю, нужно ли было делать что-то вроде главного меню, но в задании этого вроде не было
    }
}

public class Tester extends Character{

    Tester(String name) throws CharacterCreationException {
        this.name = name;
        if(!name.equals("Test")) throw new CharacterCreationException();
    }
}

import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.*;

public class Character {
    protected String name;
    protected int height;
    protected String healthStatus;
    protected String additionalItem;
    protected int strength;
    protected int damage;

    Character(){
        this.name = null;
        this.healthStatus = null;
        this.height = 0;
        this.additionalItem = null;
    }
    Character(String name, String healthStatus, int height, String additionalItem){
        this.name = name;
        this.healthStatus = healthStatus;
        this.height = height;
        this.additionalItem = additionalItem;
        strength = 15;
    }

    protected void becomeIll() throws InterruptedException {
        final List<String> illnessList = Arrays.asList(
                "flu",
                "quinsy",
                "tuberculosis",
                "migraine",
                "allergy",
                "herpes",
                "cholera"
        );
        Random illness = new Random();
        this.healthStatus = illnessList.get(illness.nextInt(6));
        System.out.println("Oh-oh! Bad news! You`re got a " + healthStatus + ". It`s time to sleep!");
        Scanner scanner = new Scanner(System.in);
        System.out.print("Do you wanna fall asleep? (yes/no): ");
        String sleepTurn = scanner.next();
        if(sleepTurn.equals("yes")||sleepTurn.equals("нуы")||sleepTurn.equals("да")||sleepTurn.equals("lf")) {
            sleep();
        } else if (sleepTurn.equals("no")||sleepTurn.equals("ytn")||sleepTurn.equals("тщ")||sleepTurn.equals("нет")){
            System.out.println("You dead!");
            Scanner sc = new Scanner(System.in);
            System.out.print("Wanna return? (yes/no): ");
            String newTurn = scanner.next();
            if(newTurn.equals("yes")||newTurn.equals("lf")||newTurn.equals("нуы")||newTurn.equals("да")){
                sleep();
            } else {
                System.out.println("You finally dead!");
                System.exit(1);
                return;
            }
        }
    }

    protected void grow(){
        int oldHeight = this.height;
        while(true) {
            int newHeight = (int) (height + Math.random() * 10);
            this.height = newHeight;
            if(newHeight == oldHeight) {
                newHeight = (int) (height + Math.random() * 10);
                this.height = newHeight;
            } else break;
        }
        System.out.println("Your character grown up. Now his height is " + height);
    }

    protected void newAdditionalItem() throws InterruptedException {
        final List<String> itemList = Arrays.asList(
                "Knife",
                "Magic Sphere",
                "Coin Bag",
                "Golden sword",
                "Pike",
                "Black King Bar",
                "Magic Wand"
        );
        Random item = new Random();
        this.additionalItem = itemList.get(item.nextInt(6));
        System.out.println("You found the new item: " + additionalItem);
    }

    protected void sleep() throws InterruptedException {
        LocalDateTime time = LocalDateTime.now(ZoneId.of("Europe/Moscow"));
        System.out.println("You`re falling asleep. It`s " + time.getDayOfWeek() + " " + time.getHour() + ":" + time.getMinute());
        Thread.sleep(5000);
        LocalDateTime newTime = time.plusHours(8);
        System.out.println("So, you`re awake. It`s " + newTime.getDayOfWeek() + " " + newTime.getHour() + ":" + newTime.getMinute());
    }

    protected void helloMyNameIs(){
        System.out.println("Hello, i`m " + name);
    }

    protected void damage(){
        damage = strength;
        System.out.println("You hit a monster by " + "-" + damage);
        strength++;

        if(strength == 100) strength--;
    }
}

public class Wizard extends Character{
    int mana;

    Wizard() {
        super("Mr.Mister)", "Healthy", 205, null);
        mana = 50;
    }

    @Override
    protected void newAdditionalItem() throws InterruptedException {
        super.newAdditionalItem();
        if(!this.additionalItem.equals("Knife") || !this.additionalItem.equals("Magic Sphere") || !this.additionalItem.equals("Magic Wand")) {
            System.out.println("So, you can use only a Knife and Magic Items. Drop it!");
            Thread.sleep(3000);
            System.out.println("**Dropped**");
        }
    }

    @Override
    protected void helloMyNameIs(){
        System.out.println("Good afternoon! I`m the wizard. My name is " + name);
    }

    @Override
    protected void damage() {
        super.damage();
        if (mana < 50 && mana > 0) {
            damage = mana / 2;
            mana++;
        } else if (mana > 50 && mana < 70) {
            damage = mana;
            mana++;
        } else if (mana > 70 && mana < 100) {
            damage = mana * 2;
            mana++;
        }

        if (mana == 100) mana--;
    }
}

import java.util.Arrays;
import java.util.List;

public class Archer extends Character{
    double shootingLevel;

    Archer(){
        super("Derek", "Healthy", 170, null);
        shootingLevel = 1;
    }

    @Override
    protected void grow(){
        super.grow();
        if(height>175) {
            System.out.println("Oops! You can`t grow bigger than 175cm");
            height = height-7;
            System.out.println("Your height now is " + this.height);
        }
    }

    @Override
    protected void helloMyNameIs(){
        System.out.println("Oh, hi. I`m the archer - " + name);
    }

    @Override
    protected void damage(){
        super.damage();

        if(shootingLevel>=1&&shootingLevel<=3) {
            damage = (int)shootingLevel*10;
            shootingLevel = shootingLevel+0.5;
        } else if (shootingLevel>=4&&shootingLevel<8) {
            damage = (int)shootingLevel*12;
            shootingLevel = shootingLevel+0.5;
        } else if (shootingLevel>=8&&shootingLevel<=12) {
            damage = (int)shootingLevel*15;
            shootingLevel = shootingLevel+0.5;
        }

        if(shootingLevel>12) shootingLevel = shootingLevel-0.5;
    }
}
